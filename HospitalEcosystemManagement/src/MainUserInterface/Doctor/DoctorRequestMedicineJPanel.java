/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Lab.Tests;
import Business.Patient.Bills;
import Business.Patient.Patient;
import Business.Pharmacy.Medicine;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronitchougule
 */
public class DoctorRequestMedicineJPanel extends javax.swing.JPanel {

    /** Creates new form DoctorRequestMedicineJPanel */
    
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private UserAccount userAccount;
    private Patient patient;
    Medicine m;
    ArrayList<Medicine> items=new ArrayList<Medicine>();

    
    public DoctorRequestMedicineJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = account;
        this.patient = patient;
        populatetableMedicine();
    }

    
        private void populatetableMedicine() {
        DefaultTableModel model = (DefaultTableModel) tableRequestMedicine1.getModel();

        model.setRowCount(0); 

        for (Medicine t : ecosystem.getPharmacy().getmedList()) {

            
               Object[] row = new Object[4];                
                row[0] = t;
                row[1] = t.getUsage();
                row[2] =t.getQuantity();
                row[3] = t.getPrice();
                model.addRow(row);
        }
    }
        
        public void populateCart(Medicine item){
        DefaultTableModel model = (DefaultTableModel) cartTableMedicines.getModel();
        model.setRowCount(0);
        
         items.add(item);
         Object[] row = new Object[4];
                for(Medicine t:items){
                     row[0] = t;
                row[1] = t.getUsage();
                row[2] =t.getQuantity();
                row[3] = t.getPrice();
                model.addRow(row);
                }  
     }
    private void populatePatientTable() {
        //DefaultTableModel model = (DefaultTableModel) tableAddedLabTest.getModel();

        //model.setRowCount(0);

        for (Patient patient : ecosystem.getPatientDirectory().getPatientList()) {

            Object[] row = new Object[7];
            row[0] = patient.getUserName();
            row[1] = patient.getHealthInsuranceID();
            row[2] = patient.getPatientFirstName();
            row[3] = patient.getPatientLastName();
            row[4] = patient.getAge();
            row[5] = patient.getPatientaddress();
            row[6] = patient.getEmailAddress();
            
          //  model.addRow(row);

        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartTableMedicines = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRequestMedicine1 = new javax.swing.JTable();
        btnRemoveMedicine = new javax.swing.JButton();
        btnAddMedicine1 = new javax.swing.JButton();
        Request = new javax.swing.JButton();
        Request1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 85, 177));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Request Medicines");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 32, 1392, -1));

        cartTableMedicines.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        cartTableMedicines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Med Name", "Med Usage", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cartTableMedicines);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 306, 1412, 114));

        tableRequestMedicine1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        tableRequestMedicine1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Med Name", "Med Usage", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableRequestMedicine1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 106, 1412, 117));

        btnRemoveMedicine.setBackground(new java.awt.Color(15, 85, 177));
        btnRemoveMedicine.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btnRemoveMedicine.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveMedicine.setText("REMOVE MEDICINE");
        btnRemoveMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMedicineActionPerformed(evt);
            }
        });
        add(btnRemoveMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 449, 220, 46));

        btnAddMedicine1.setBackground(new java.awt.Color(15, 85, 177));
        btnAddMedicine1.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        btnAddMedicine1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddMedicine1.setText("ADD MEDICINE");
        btnAddMedicine1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedicine1ActionPerformed(evt);
            }
        });
        add(btnAddMedicine1, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 241, 178, 47));

        Request.setBackground(new java.awt.Color(15, 85, 177));
        Request.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        Request.setForeground(new java.awt.Color(255, 255, 255));
        Request.setText("REQUEST");
        Request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestActionPerformed(evt);
            }
        });
        add(Request, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 555, 128, 42));

        Request1.setBackground(new java.awt.Color(15, 85, 177));
        Request1.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        Request1.setForeground(new java.awt.Color(255, 255, 255));
        Request1.setText("<< BACK");
        Request1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Request1ActionPerformed(evt);
            }
        });
        add(Request1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 555, 128, 42));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/medicine.gif"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 420, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMedicineActionPerformed
        // TODO add your handling code here:
        int selectedRow = cartTableMedicines.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Medicine item=(Medicine)cartTableMedicines.getValueAt(selectedRow, 0);
            items.remove(item);
            DefaultTableModel model = (DefaultTableModel) cartTableMedicines.getModel();
        model.setRowCount(0);
            Object[] row = new Object[4];
                for(Medicine t:items){
                        row[0] = t;
                row[1] = t.getUsage();
                row[2] =t.getQuantity();
                row[3] = t.getPrice();
                model.addRow(row);
                }
        }
     
    }//GEN-LAST:event_btnRemoveMedicineActionPerformed

    private void btnAddMedicine1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedicine1ActionPerformed
        // TODO add your handling code here:
                int selectedRow = tableRequestMedicine1.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Medicine item=(Medicine)tableRequestMedicine1.getValueAt(selectedRow, 0);
            
            populateCart(item);
          
        }
    }//GEN-LAST:event_btnAddMedicine1ActionPerformed

    private void RequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestActionPerformed
        // TODO add your handling code here:
        if(items.size()==0){
            JOptionPane.showMessageDialog(null,"Please add test to the cart.","Warning",JOptionPane.WARNING_MESSAGE);

        }
        else{
            for(Medicine t:items){
                //String itemName,String organization1,float itemAmount, String result, String itemStatus

                Bills bill = new Bills(t.getMedName(), "Pharmacy", t.getPrice(),"","Requested");
                patient.addbill(bill);
                
                //ecosystem.AddTreatedPatientList(patient);
            }
            ecosystem.getPharmacy().AddpharmaRecordList(patient);
            patient.setPharmaStatus("Requested");
            
            DoctorVisitJPanel doctorVisit = new DoctorVisitJPanel(userProcessContainer, userAccount, ecosystem, patient);
            userProcessContainer.add("Visit Doctor", doctorVisit);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

    }//GEN-LAST:event_RequestActionPerformed

    private void Request1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Request1ActionPerformed
        // TODO add your handling code here:
        DoctorVisitJPanel doctorVisit = new DoctorVisitJPanel(userProcessContainer, userAccount, ecosystem, patient);
        userProcessContainer.add("Visit Doctor", doctorVisit);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_Request1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Request;
    private javax.swing.JButton Request1;
    private javax.swing.JButton btnAddMedicine1;
    private javax.swing.JButton btnRemoveMedicine;
    private javax.swing.JTable cartTableMedicines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableRequestMedicine1;
    // End of variables declaration//GEN-END:variables

}
